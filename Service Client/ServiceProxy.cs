//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3603
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data;
using System.Diagnostics;
using System.Web.Services;
using System.Web.Services.Protocols;
using System.Xml.Serialization;

// 
// This source code was auto-generated by wsdl, Version=2.0.50727.3038.
// 

using BAFactory.Fx.Network.Email;

namespace BAFactory.XEMail.ServiceClient.WebserviceProxy
{
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name = "ServiceSoap", Namespace = "http://www.siprod.net/webservices/XEMail/")]
    public partial class XEMailWebserviceProxy : System.Web.Services.Protocols.SoapHttpClientProtocol
    {

        private System.Threading.SendOrPostCallback ListPop3EMailsOperationCompleted;

        private System.Threading.SendOrPostCallback GetAllPop3EMailsHeadersOperationCompleted;

        private System.Threading.SendOrPostCallback GetAllPop3EMailsHeadersDecodedOperationCompleted;

        private System.Threading.SendOrPostCallback GetAllPop3EMailsHeadersDSOperationCompleted;

        private System.Threading.SendOrPostCallback GetAllPop3EMailsHeadersHtmlOperationCompleted;

        private System.Threading.SendOrPostCallback RetrievePop3EMailOperationCompleted;

        private System.Threading.SendOrPostCallback RetrievePop3RawEMailStreamOperationCompleted;

        private System.Threading.SendOrPostCallback DeletePop3EMailOperationCompleted;

        private System.Threading.SendOrPostCallback SendSmtpEMailOperationCompleted;

        /// <remarks/>
        public XEMailWebserviceProxy()
        {
            this.Url = "http://webservices.siprod.net/xemail.asmx";
        }
        
        public XEMailWebserviceProxy(string url)
        {
            this.Url = url;
        }

        /// <remarks/>
        public event ListPop3EMailsCompletedEventHandler ListPop3EMailsCompleted;

        /// <remarks/>
        public event GetAllPop3EMailsHeadersCompletedEventHandler GetAllPop3EMailsHeadersCompleted;

        /// <remarks/>
        public event GetAllPop3EMailsHeadersDecodedCompletedEventHandler GetAllPop3EMailsHeadersDecodedCompleted;

        /// <remarks/>
        public event GetAllPop3EMailsHeadersDSCompletedEventHandler GetAllPop3EMailsHeadersDSCompleted;

        /// <remarks/>
        public event GetAllPop3EMailsHeadersHtmlCompletedEventHandler GetAllPop3EMailsHeadersHtmlCompleted;

        /// <remarks/>
        public event RetrievePop3EMailCompletedEventHandler RetrievePop3EMailCompleted;

        /// <remarks/>
        public event RetrievePop3RawEMailStreamCompletedEventHandler RetrievePop3RawEMailStreamCompleted;

        /// <remarks/>
        public event DeletePop3EMailCompletedEventHandler DeletePop3EMailCompleted;

        /// <remarks/>
        public event SendSmtpEMailCompletedEventHandler SendSmtpEMailCompleted;

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.siprod.net/webservices/XEMail/ListPop3EMails", RequestNamespace = "http://www.siprod.net/webservices/XEMail/", ResponseNamespace = "http://www.siprod.net/webservices/XEMail/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public EMailsListElement[] ListPop3EMails(string Server, int Port, string Username, string Password, bool Ssl)
        {
            object[] results = this.Invoke("ListPop3EMails", new object[] {
                    Server,
                    Port,
                    Username,
                    Password,
                    Ssl});
            return ((EMailsListElement[])(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginListPop3EMails(string Server, int Port, string Username, string Password, bool Ssl, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("ListPop3EMails", new object[] {
                    Server,
                    Port,
                    Username,
                    Password,
                    Ssl}, callback, asyncState);
        }

        /// <remarks/>
        public EMailsListElement[] EndListPop3EMails(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((EMailsListElement[])(results[0]));
        }

        /// <remarks/>
        public void ListPop3EMailsAsync(string Server, int Port, string Username, string Password, bool Ssl)
        {
            this.ListPop3EMailsAsync(Server, Port, Username, Password, Ssl, null);
        }

        /// <remarks/>
        public void ListPop3EMailsAsync(string Server, int Port, string Username, string Password, bool Ssl, object userState)
        {
            if ((this.ListPop3EMailsOperationCompleted == null))
            {
                this.ListPop3EMailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnListPop3EMailsOperationCompleted);
            }
            this.InvokeAsync("ListPop3EMails", new object[] {
                    Server,
                    Port,
                    Username,
                    Password,
                    Ssl}, this.ListPop3EMailsOperationCompleted, userState);
        }

        private void OnListPop3EMailsOperationCompleted(object arg)
        {
            if ((this.ListPop3EMailsCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ListPop3EMailsCompleted(this, new ListPop3EMailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.siprod.net/webservices/XEMail/GetAllPop3EMailsHeaders", RequestNamespace = "http://www.siprod.net/webservices/XEMail/", ResponseNamespace = "http://www.siprod.net/webservices/XEMail/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public EMailMessage[] GetAllPop3EMailsHeaders(string Server, int Port, string Username, string Password, bool Ssl)
        {
            object[] results = this.Invoke("GetAllPop3EMailsHeaders", new object[] {
                    Server,
                    Port,
                    Username,
                    Password,
                    Ssl});
            return ((EMailMessage[])(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGetAllPop3EMailsHeaders(string Server, int Port, string Username, string Password, bool Ssl, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("GetAllPop3EMailsHeaders", new object[] {
                    Server,
                    Port,
                    Username,
                    Password,
                    Ssl}, callback, asyncState);
        }

        /// <remarks/>
        public EMailMessage[] EndGetAllPop3EMailsHeaders(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((EMailMessage[])(results[0]));
        }

        /// <remarks/>
        public void GetAllPop3EMailsHeadersAsync(string Server, int Port, string Username, string Password, bool Ssl)
        {
            this.GetAllPop3EMailsHeadersAsync(Server, Port, Username, Password, Ssl, null);
        }

        /// <remarks/>
        public void GetAllPop3EMailsHeadersAsync(string Server, int Port, string Username, string Password, bool Ssl, object userState)
        {
            if ((this.GetAllPop3EMailsHeadersOperationCompleted == null))
            {
                this.GetAllPop3EMailsHeadersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllPop3EMailsHeadersOperationCompleted);
            }
            this.InvokeAsync("GetAllPop3EMailsHeaders", new object[] {
                    Server,
                    Port,
                    Username,
                    Password,
                    Ssl}, this.GetAllPop3EMailsHeadersOperationCompleted, userState);
        }

        private void OnGetAllPop3EMailsHeadersOperationCompleted(object arg)
        {
            if ((this.GetAllPop3EMailsHeadersCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllPop3EMailsHeadersCompleted(this, new GetAllPop3EMailsHeadersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.siprod.net/webservices/XEMail/GetAllPop3EMailsHeadersDecoded", RequestNamespace = "http://www.siprod.net/webservices/XEMail/", ResponseNamespace = "http://www.siprod.net/webservices/XEMail/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public EMailMessage[] GetAllPop3EMailsHeadersDecoded(string Server, int Port, string Username, string Password, bool Ssl)
        {
            object[] results = this.Invoke("GetAllPop3EMailsHeadersDecoded", new object[] {
                    Server,
                    Port,
                    Username,
                    Password,
                    Ssl});
            return ((EMailMessage[])(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGetAllPop3EMailsHeadersDecoded(string Server, int Port, string Username, string Password, bool Ssl, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("GetAllPop3EMailsHeadersDecoded", new object[] {
                    Server,
                    Port,
                    Username,
                    Password,
                    Ssl}, callback, asyncState);
        }

        /// <remarks/>
        public EMailMessage[] EndGetAllPop3EMailsHeadersDecoded(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((EMailMessage[])(results[0]));
        }

        /// <remarks/>
        public void GetAllPop3EMailsHeadersDecodedAsync(string Server, int Port, string Username, string Password, bool Ssl)
        {
            this.GetAllPop3EMailsHeadersDecodedAsync(Server, Port, Username, Password, Ssl, null);
        }

        /// <remarks/>
        public void GetAllPop3EMailsHeadersDecodedAsync(string Server, int Port, string Username, string Password, bool Ssl, object userState)
        {
            if ((this.GetAllPop3EMailsHeadersDecodedOperationCompleted == null))
            {
                this.GetAllPop3EMailsHeadersDecodedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllPop3EMailsHeadersDecodedOperationCompleted);
            }
            this.InvokeAsync("GetAllPop3EMailsHeadersDecoded", new object[] {
                    Server,
                    Port,
                    Username,
                    Password,
                    Ssl}, this.GetAllPop3EMailsHeadersDecodedOperationCompleted, userState);
        }

        private void OnGetAllPop3EMailsHeadersDecodedOperationCompleted(object arg)
        {
            if ((this.GetAllPop3EMailsHeadersDecodedCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllPop3EMailsHeadersDecodedCompleted(this, new GetAllPop3EMailsHeadersDecodedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.siprod.net/webservices/XEMail/GetAllPop3EMailsHeadersDS", RequestNamespace = "http://www.siprod.net/webservices/XEMail/", ResponseNamespace = "http://www.siprod.net/webservices/XEMail/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetAllPop3EMailsHeadersDS(string Server, int Port, string Username, string Password, bool Ssl)
        {
            object[] results = this.Invoke("GetAllPop3EMailsHeadersDS", new object[] {
                    Server,
                    Port,
                    Username,
                    Password,
                    Ssl});
            return ((System.Data.DataSet)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGetAllPop3EMailsHeadersDS(string Server, int Port, string Username, string Password, bool Ssl, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("GetAllPop3EMailsHeadersDS", new object[] {
                    Server,
                    Port,
                    Username,
                    Password,
                    Ssl}, callback, asyncState);
        }

        /// <remarks/>
        public System.Data.DataSet EndGetAllPop3EMailsHeadersDS(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }

        /// <remarks/>
        public void GetAllPop3EMailsHeadersDSAsync(string Server, int Port, string Username, string Password, bool Ssl)
        {
            this.GetAllPop3EMailsHeadersDSAsync(Server, Port, Username, Password, Ssl, null);
        }

        /// <remarks/>
        public void GetAllPop3EMailsHeadersDSAsync(string Server, int Port, string Username, string Password, bool Ssl, object userState)
        {
            if ((this.GetAllPop3EMailsHeadersDSOperationCompleted == null))
            {
                this.GetAllPop3EMailsHeadersDSOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllPop3EMailsHeadersDSOperationCompleted);
            }
            this.InvokeAsync("GetAllPop3EMailsHeadersDS", new object[] {
                    Server,
                    Port,
                    Username,
                    Password,
                    Ssl}, this.GetAllPop3EMailsHeadersDSOperationCompleted, userState);
        }

        private void OnGetAllPop3EMailsHeadersDSOperationCompleted(object arg)
        {
            if ((this.GetAllPop3EMailsHeadersDSCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllPop3EMailsHeadersDSCompleted(this, new GetAllPop3EMailsHeadersDSCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.siprod.net/webservices/XEMail/GetAllPop3EMailsHeadersHtml", RequestNamespace = "http://www.siprod.net/webservices/XEMail/", ResponseNamespace = "http://www.siprod.net/webservices/XEMail/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetAllPop3EMailsHeadersHtml(string Server, int Port, string Username, string Password, bool Ssl)
        {
            object[] results = this.Invoke("GetAllPop3EMailsHeadersHtml", new object[] {
                    Server,
                    Port,
                    Username,
                    Password,
                    Ssl});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGetAllPop3EMailsHeadersHtml(string Server, int Port, string Username, string Password, bool Ssl, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("GetAllPop3EMailsHeadersHtml", new object[] {
                    Server,
                    Port,
                    Username,
                    Password,
                    Ssl}, callback, asyncState);
        }

        /// <remarks/>
        public string EndGetAllPop3EMailsHeadersHtml(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void GetAllPop3EMailsHeadersHtmlAsync(string Server, int Port, string Username, string Password, bool Ssl)
        {
            this.GetAllPop3EMailsHeadersHtmlAsync(Server, Port, Username, Password, Ssl, null);
        }

        /// <remarks/>
        public void GetAllPop3EMailsHeadersHtmlAsync(string Server, int Port, string Username, string Password, bool Ssl, object userState)
        {
            if ((this.GetAllPop3EMailsHeadersHtmlOperationCompleted == null))
            {
                this.GetAllPop3EMailsHeadersHtmlOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllPop3EMailsHeadersHtmlOperationCompleted);
            }
            this.InvokeAsync("GetAllPop3EMailsHeadersHtml", new object[] {
                    Server,
                    Port,
                    Username,
                    Password,
                    Ssl}, this.GetAllPop3EMailsHeadersHtmlOperationCompleted, userState);
        }

        private void OnGetAllPop3EMailsHeadersHtmlOperationCompleted(object arg)
        {
            if ((this.GetAllPop3EMailsHeadersHtmlCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllPop3EMailsHeadersHtmlCompleted(this, new GetAllPop3EMailsHeadersHtmlCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.siprod.net/webservices/XEMail/RetrievePop3EMail", RequestNamespace = "http://www.siprod.net/webservices/XEMail/", ResponseNamespace = "http://www.siprod.net/webservices/XEMail/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public EMailMessage RetrievePop3EMail(string Server, int Port, string Username, string Password, bool Ssl, int MessageNumber)
        {
            object[] results = this.Invoke("RetrievePop3EMail", new object[] {
                    Server,
                    Port,
                    Username,
                    Password,
                    Ssl,
                    MessageNumber});
            return ((EMailMessage)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginRetrievePop3EMail(string Server, int Port, string Username, string Password, bool Ssl, int MessageNumber, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("RetrievePop3EMail", new object[] {
                    Server,
                    Port,
                    Username,
                    Password,
                    Ssl,
                    MessageNumber}, callback, asyncState);
        }

        /// <remarks/>
        public EMailMessage EndRetrievePop3EMail(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((EMailMessage)(results[0]));
        }

        /// <remarks/>
        public void RetrievePop3EMailAsync(string Server, int Port, string Username, string Password, bool Ssl, int MessageNumber)
        {
            this.RetrievePop3EMailAsync(Server, Port, Username, Password, Ssl, MessageNumber, null);
        }

        /// <remarks/>
        public void RetrievePop3EMailAsync(string Server, int Port, string Username, string Password, bool Ssl, int MessageNumber, object userState)
        {
            if ((this.RetrievePop3EMailOperationCompleted == null))
            {
                this.RetrievePop3EMailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRetrievePop3EMailOperationCompleted);
            }
            this.InvokeAsync("RetrievePop3EMail", new object[] {
                    Server,
                    Port,
                    Username,
                    Password,
                    Ssl,
                    MessageNumber}, this.RetrievePop3EMailOperationCompleted, userState);
        }

        private void OnRetrievePop3EMailOperationCompleted(object arg)
        {
            if ((this.RetrievePop3EMailCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RetrievePop3EMailCompleted(this, new RetrievePop3EMailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.siprod.net/webservices/XEMail/RetrievePop3RawEMailStream", RequestNamespace = "http://www.siprod.net/webservices/XEMail/", ResponseNamespace = "http://www.siprod.net/webservices/XEMail/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string RetrievePop3RawEMailStream(string Server, int Port, string Username, string Password, bool Ssl, int MessageNumber)
        {
            object[] results = this.Invoke("RetrievePop3RawEMailStream", new object[] {
                    Server,
                    Port,
                    Username,
                    Password,
                    Ssl,
                    MessageNumber});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginRetrievePop3RawEMailStream(string Server, int Port, string Username, string Password, bool Ssl, int MessageNumber, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("RetrievePop3RawEMailStream", new object[] {
                    Server,
                    Port,
                    Username,
                    Password,
                    Ssl,
                    MessageNumber}, callback, asyncState);
        }

        /// <remarks/>
        public string EndRetrievePop3RawEMailStream(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void RetrievePop3RawEMailStreamAsync(string Server, int Port, string Username, string Password, bool Ssl, int MessageNumber)
        {
            this.RetrievePop3RawEMailStreamAsync(Server, Port, Username, Password, Ssl, MessageNumber, null);
        }

        /// <remarks/>
        public void RetrievePop3RawEMailStreamAsync(string Server, int Port, string Username, string Password, bool Ssl, int MessageNumber, object userState)
        {
            if ((this.RetrievePop3RawEMailStreamOperationCompleted == null))
            {
                this.RetrievePop3RawEMailStreamOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRetrievePop3RawEMailStreamOperationCompleted);
            }
            this.InvokeAsync("RetrievePop3RawEMailStream", new object[] {
                    Server,
                    Port,
                    Username,
                    Password,
                    Ssl,
                    MessageNumber}, this.RetrievePop3RawEMailStreamOperationCompleted, userState);
        }

        private void OnRetrievePop3RawEMailStreamOperationCompleted(object arg)
        {
            if ((this.RetrievePop3RawEMailStreamCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RetrievePop3RawEMailStreamCompleted(this, new RetrievePop3RawEMailStreamCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.siprod.net/webservices/XEMail/DeletePop3EMail", RequestNamespace = "http://www.siprod.net/webservices/XEMail/", ResponseNamespace = "http://www.siprod.net/webservices/XEMail/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool DeletePop3EMail(string Server, int Port, string Username, string Password, bool Ssl, int MessageNumber)
        {
            object[] results = this.Invoke("DeletePop3EMail", new object[] {
                    Server,
                    Port,
                    Username,
                    Password,
                    Ssl,
                    MessageNumber});
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginDeletePop3EMail(string Server, int Port, string Username, string Password, bool Ssl, int MessageNumber, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("DeletePop3EMail", new object[] {
                    Server,
                    Port,
                    Username,
                    Password,
                    Ssl,
                    MessageNumber}, callback, asyncState);
        }

        /// <remarks/>
        public bool EndDeletePop3EMail(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public void DeletePop3EMailAsync(string Server, int Port, string Username, string Password, bool Ssl, int MessageNumber)
        {
            this.DeletePop3EMailAsync(Server, Port, Username, Password, Ssl, MessageNumber, null);
        }

        /// <remarks/>
        public void DeletePop3EMailAsync(string Server, int Port, string Username, string Password, bool Ssl, int MessageNumber, object userState)
        {
            if ((this.DeletePop3EMailOperationCompleted == null))
            {
                this.DeletePop3EMailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeletePop3EMailOperationCompleted);
            }
            this.InvokeAsync("DeletePop3EMail", new object[] {
                    Server,
                    Port,
                    Username,
                    Password,
                    Ssl,
                    MessageNumber}, this.DeletePop3EMailOperationCompleted, userState);
        }

        private void OnDeletePop3EMailOperationCompleted(object arg)
        {
            if ((this.DeletePop3EMailCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeletePop3EMailCompleted(this, new DeletePop3EMailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.siprod.net/webservices/XEMail/SendSmtpEMail", RequestNamespace = "http://www.siprod.net/webservices/XEMail/", ResponseNamespace = "http://www.siprod.net/webservices/XEMail/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool SendSmtpEMail(string Server, int Port, string Username, string Password, bool Ssl, EMailMessage Message)
        {
            object[] results = this.Invoke("SendSmtpEMail", new object[] {
                    Server,
                    Port,
                    Username,
                    Password,
                    Ssl,
                    Message});
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginSendSmtpEMail(string Server, int Port, string Username, string Password, bool Ssl, EMailMessage Message, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("SendSmtpEMail", new object[] {
                    Server,
                    Port,
                    Username,
                    Password,
                    Ssl,
                    Message}, callback, asyncState);
        }

        /// <remarks/>
        public bool EndSendSmtpEMail(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public void SendSmtpEMailAsync(string Server, int Port, string Username, string Password, bool Ssl, EMailMessage Message)
        {
            this.SendSmtpEMailAsync(Server, Port, Username, Password, Ssl, Message, null);
        }

        /// <remarks/>
        public void SendSmtpEMailAsync(string Server, int Port, string Username, string Password, bool Ssl, EMailMessage Message, object userState)
        {
            if ((this.SendSmtpEMailOperationCompleted == null))
            {
                this.SendSmtpEMailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendSmtpEMailOperationCompleted);
            }
            this.InvokeAsync("SendSmtpEMail", new object[] {
                    Server,
                    Port,
                    Username,
                    Password,
                    Ssl,
                    Message}, this.SendSmtpEMailOperationCompleted, userState);
        }

        private void OnSendSmtpEMailOperationCompleted(object arg)
        {
            if ((this.SendSmtpEMailCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendSmtpEMailCompleted(this, new SendSmtpEMailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        public new void CancelAsync(object userState)
        {
            base.CancelAsync(userState);
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.siprod.net/webservices/XEMail/")]
    public partial class EMailsListElement
    {

        private int numberField;

        private long bytesField;

        private bool retrievedField;

        /// <remarks/>
        public int Number
        {
            get
            {
                return this.numberField;
            }
            set
            {
                this.numberField = value;
            }
        }

        /// <remarks/>
        public long Bytes
        {
            get
            {
                return this.bytesField;
            }
            set
            {
                this.bytesField = value;
            }
        }

        /// <remarks/>
        public bool Retrieved
        {
            get
            {
                return this.retrievedField;
            }
            set
            {
                this.retrievedField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.siprod.net/webservices/XEMail/")]
    public partial class EMailAttachment
    {

        private string nameField;

        private string contentTransferEncodingField;

        private string contentDescriptionField;

        private string contentTypeField;

        private string contentDispositionField;

        private string fileNameField;

        private string idField;

        private string contentStreamField;

        private string nameEncodingField;

        /// <remarks/>
        public string Name
        {
            get
            {
                return this.nameField;
            }
            set
            {
                this.nameField = value;
            }
        }

        /// <remarks/>
        public string ContentTransferEncoding
        {
            get
            {
                return this.contentTransferEncodingField;
            }
            set
            {
                this.contentTransferEncodingField = value;
            }
        }

        /// <remarks/>
        public string ContentDescription
        {
            get
            {
                return this.contentDescriptionField;
            }
            set
            {
                this.contentDescriptionField = value;
            }
        }

        /// <remarks/>
        public string ContentType
        {
            get
            {
                return this.contentTypeField;
            }
            set
            {
                this.contentTypeField = value;
            }
        }

        /// <remarks/>
        public string ContentDisposition
        {
            get
            {
                return this.contentDispositionField;
            }
            set
            {
                this.contentDispositionField = value;
            }
        }

        /// <remarks/>
        public string FileName
        {
            get
            {
                return this.fileNameField;
            }
            set
            {
                this.fileNameField = value;
            }
        }

        /// <remarks/>
        public string Id
        {
            get
            {
                return this.idField;
            }
            set
            {
                this.idField = value;
            }
        }

        /// <remarks/>
        public string ContentStream
        {
            get
            {
                return this.contentStreamField;
            }
            set
            {
                this.contentStreamField = value;
            }
        }

        /// <remarks/>
        public string NameEncoding
        {
            get
            {
                return this.nameEncodingField;
            }
            set
            {
                this.nameEncodingField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.siprod.net/webservices/XEMail/")]
    public partial class OtherHeadersCollection
    {

        private string[] collectionField;

        /// <remarks/>
        public string[] Collection
        {
            get
            {
                return this.collectionField;
            }
            set
            {
                this.collectionField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.siprod.net/webservices/XEMail/")]
    public partial class EMailBodyAlternateView
    {

        private string contentTypeField;

        private string contentTransferEncodingField;

        private string charsetField;

        private string contentStreamField;

        private string baseUriField;

        private string idField;

        private string typeField;

        private string[] linkedResourcesField;

        /// <remarks/>
        public string ContentType
        {
            get
            {
                return this.contentTypeField;
            }
            set
            {
                this.contentTypeField = value;
            }
        }

        /// <remarks/>
        public string ContentTransferEncoding
        {
            get
            {
                return this.contentTransferEncodingField;
            }
            set
            {
                this.contentTransferEncodingField = value;
            }
        }

        /// <remarks/>
        public string Charset
        {
            get
            {
                return this.charsetField;
            }
            set
            {
                this.charsetField = value;
            }
        }

        /// <remarks/>
        public string ContentStream
        {
            get
            {
                return this.contentStreamField;
            }
            set
            {
                this.contentStreamField = value;
            }
        }

        /// <remarks/>
        public string BaseUri
        {
            get
            {
                return this.baseUriField;
            }
            set
            {
                this.baseUriField = value;
            }
        }

        /// <remarks/>
        public string Id
        {
            get
            {
                return this.idField;
            }
            set
            {
                this.idField = value;
            }
        }

        /// <remarks/>
        public string Type
        {
            get
            {
                return this.typeField;
            }
            set
            {
                this.typeField = value;
            }
        }

        /// <remarks/>
        public string[] LinkedResources
        {
            get
            {
                return this.linkedResourcesField;
            }
            set
            {
                this.linkedResourcesField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.siprod.net/webservices/XEMail/")]
    public partial class EMailAddress
    {

        private string displayNameField;

        private string addressField;

        /// <remarks/>
        public string DisplayName
        {
            get
            {
                return this.displayNameField;
            }
            set
            {
                this.displayNameField = value;
            }
        }

        /// <remarks/>
        public string Address
        {
            get
            {
                return this.addressField;
            }
            set
            {
                this.addressField = value;
            }
        }
    }

    ///// <remarks/>
    //[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    //[System.SerializableAttribute()]
    //[System.Diagnostics.DebuggerStepThroughAttribute()]
    //[System.ComponentModel.DesignerCategoryAttribute("code")]
    //[System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.siprod.net/webservices/XEMail/")]
    //public partial class EMailMessage
    //{

    //    private EMailAddress[] ccField;

    //    private EMailAddress fromField;

    //    private string headerField;

    //    private EMailBodyAlternateView bodyField;

    //    private string priorityField;

    //    private EMailAddress replyToField;

    //    private EMailAddress senderField;

    //    private string subjectField;

    //    private string dateField;

    //    private EMailAddress[] toField;

    //    private string contentClassesField;

    //    private string mIMEVersionField;

    //    private string contentTypeField;

    //    private string contentTransferEncodingField;

    //    private OtherHeadersCollection otherHeadersField;

    //    private EMailBodyAlternateView[] viewsField;

    //    private EMailAttachment[] attachmentsField;

    //    private string subjectEncodingField;

    //    private string bodyEncodingField;

    //    private int numberField;

    //    private long bytesField;

    //    private bool retrievedField;

    //    /// <remarks/>
    //    public EMailAddress[] CC
    //    {
    //        get
    //        {
    //            return this.ccField;
    //        }
    //        set
    //        {
    //            this.ccField = value;
    //        }
    //    }

    //    /// <remarks/>
    //    public EMailAddress From
    //    {
    //        get
    //        {
    //            return this.fromField;
    //        }
    //        set
    //        {
    //            this.fromField = value;
    //        }
    //    }

    //    /// <remarks/>
    //    public string Header
    //    {
    //        get
    //        {
    //            return this.headerField;
    //        }
    //        set
    //        {
    //            this.headerField = value;
    //        }
    //    }

    //    /// <remarks/>
    //    public EMailBodyAlternateView Body
    //    {
    //        get
    //        {
    //            return this.bodyField;
    //        }
    //        set
    //        {
    //            this.bodyField = value;
    //        }
    //    }

    //    /// <remarks/>
    //    public string Priority
    //    {
    //        get
    //        {
    //            return this.priorityField;
    //        }
    //        set
    //        {
    //            this.priorityField = value;
    //        }
    //    }

    //    /// <remarks/>
    //    public EMailAddress ReplyTo
    //    {
    //        get
    //        {
    //            return this.replyToField;
    //        }
    //        set
    //        {
    //            this.replyToField = value;
    //        }
    //    }

    //    /// <remarks/>
    //    public EMailAddress Sender
    //    {
    //        get
    //        {
    //            return this.senderField;
    //        }
    //        set
    //        {
    //            this.senderField = value;
    //        }
    //    }

    //    /// <remarks/>
    //    public string Subject
    //    {
    //        get
    //        {
    //            return this.subjectField;
    //        }
    //        set
    //        {
    //            this.subjectField = value;
    //        }
    //    }

    //    /// <remarks/>
    //    public string Date
    //    {
    //        get
    //        {
    //            return this.dateField;
    //        }
    //        set
    //        {
    //            this.dateField = value;
    //        }
    //    }

    //    /// <remarks/>
    //    public EMailAddress[] To
    //    {
    //        get
    //        {
    //            return this.toField;
    //        }
    //        set
    //        {
    //            this.toField = value;
    //        }
    //    }

    //    /// <remarks/>
    //    public string ContentClasses
    //    {
    //        get
    //        {
    //            return this.contentClassesField;
    //        }
    //        set
    //        {
    //            this.contentClassesField = value;
    //        }
    //    }

    //    /// <remarks/>
    //    public string MIMEVersion
    //    {
    //        get
    //        {
    //            return this.mIMEVersionField;
    //        }
    //        set
    //        {
    //            this.mIMEVersionField = value;
    //        }
    //    }

    //    /// <remarks/>
    //    public string ContentType
    //    {
    //        get
    //        {
    //            return this.contentTypeField;
    //        }
    //        set
    //        {
    //            this.contentTypeField = value;
    //        }
    //    }

    //    /// <remarks/>
    //    public string ContentTransferEncoding
    //    {
    //        get
    //        {
    //            return this.contentTransferEncodingField;
    //        }
    //        set
    //        {
    //            this.contentTransferEncodingField = value;
    //        }
    //    }

    //    /// <remarks/>
    //    public OtherHeadersCollection OtherHeaders
    //    {
    //        get
    //        {
    //            return this.otherHeadersField;
    //        }
    //        set
    //        {
    //            this.otherHeadersField = value;
    //        }
    //    }

    //    /// <remarks/>
    //    public EMailBodyAlternateView[] Views
    //    {
    //        get
    //        {
    //            return this.viewsField;
    //        }
    //        set
    //        {
    //            this.viewsField = value;
    //        }
    //    }

    //    /// <remarks/>
    //    public EMailAttachment[] Attachments
    //    {
    //        get
    //        {
    //            return this.attachmentsField;
    //        }
    //        set
    //        {
    //            this.attachmentsField = value;
    //        }
    //    }

    //    /// <remarks/>
    //    public string SubjectEncoding
    //    {
    //        get
    //        {
    //            return this.subjectEncodingField;
    //        }
    //        set
    //        {
    //            this.subjectEncodingField = value;
    //        }
    //    }

    //    /// <remarks/>
    //    public string BodyEncoding
    //    {
    //        get
    //        {
    //            return this.bodyEncodingField;
    //        }
    //        set
    //        {
    //            this.bodyEncodingField = value;
    //        }
    //    }

    //    /// <remarks/>
    //    public int Number
    //    {
    //        get
    //        {
    //            return this.numberField;
    //        }
    //        set
    //        {
    //            this.numberField = value;
    //        }
    //    }

    //    /// <remarks/>
    //    public long Bytes
    //    {
    //        get
    //        {
    //            return this.bytesField;
    //        }
    //        set
    //        {
    //            this.bytesField = value;
    //        }
    //    }

    //    /// <remarks/>
    //    public bool Retrieved
    //    {
    //        get
    //        {
    //            return this.retrievedField;
    //        }
    //        set
    //        {
    //            this.retrievedField = value;
    //        }
    //    }
    //}

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void ListPop3EMailsCompletedEventHandler(object sender, ListPop3EMailsCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ListPop3EMailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal ListPop3EMailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public EMailsListElement[] Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((EMailsListElement[])(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void GetAllPop3EMailsHeadersCompletedEventHandler(object sender, GetAllPop3EMailsHeadersCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllPop3EMailsHeadersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal GetAllPop3EMailsHeadersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public EMailMessage[] Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((EMailMessage[])(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void GetAllPop3EMailsHeadersDecodedCompletedEventHandler(object sender, GetAllPop3EMailsHeadersDecodedCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllPop3EMailsHeadersDecodedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal GetAllPop3EMailsHeadersDecodedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public EMailMessage[] Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((EMailMessage[])(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void GetAllPop3EMailsHeadersDSCompletedEventHandler(object sender, GetAllPop3EMailsHeadersDSCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllPop3EMailsHeadersDSCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal GetAllPop3EMailsHeadersDSCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public System.Data.DataSet Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void GetAllPop3EMailsHeadersHtmlCompletedEventHandler(object sender, GetAllPop3EMailsHeadersHtmlCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllPop3EMailsHeadersHtmlCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal GetAllPop3EMailsHeadersHtmlCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void RetrievePop3EMailCompletedEventHandler(object sender, RetrievePop3EMailCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RetrievePop3EMailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal RetrievePop3EMailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public EMailMessage Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((EMailMessage)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void RetrievePop3RawEMailStreamCompletedEventHandler(object sender, RetrievePop3RawEMailStreamCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RetrievePop3RawEMailStreamCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal RetrievePop3RawEMailStreamCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void DeletePop3EMailCompletedEventHandler(object sender, DeletePop3EMailCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeletePop3EMailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal DeletePop3EMailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public bool Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void SendSmtpEMailCompletedEventHandler(object sender, SendSmtpEMailCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendSmtpEMailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal SendSmtpEMailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public bool Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
}