//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BAFactory.XEMail.ConsoleApplication.XEMail {
    using System.Data;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://www.siprod.net/webservices/XEMail/", ConfigurationName="XEMail.ServiceSoap")]
    public interface ServiceSoap {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.siprod.net/webservices/XEMail/ListPop3EMails", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        BAFactory.XEMail.ConsoleApplication.XEMail.ListPop3EMailsResponse ListPop3EMails(BAFactory.XEMail.ConsoleApplication.XEMail.ListPop3EMailsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.siprod.net/webservices/XEMail/ListPop3EMails", ReplyAction="*")]
        System.IAsyncResult BeginListPop3EMails(BAFactory.XEMail.ConsoleApplication.XEMail.ListPop3EMailsRequest request, System.AsyncCallback callback, object asyncState);
        
        BAFactory.XEMail.ConsoleApplication.XEMail.ListPop3EMailsResponse EndListPop3EMails(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.siprod.net/webservices/XEMail/GetAllPop3EMailsHeaders", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        BAFactory.XEMail.ConsoleApplication.XEMail.GetAllPop3EMailsHeadersResponse GetAllPop3EMailsHeaders(BAFactory.XEMail.ConsoleApplication.XEMail.GetAllPop3EMailsHeadersRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.siprod.net/webservices/XEMail/GetAllPop3EMailsHeaders", ReplyAction="*")]
        System.IAsyncResult BeginGetAllPop3EMailsHeaders(BAFactory.XEMail.ConsoleApplication.XEMail.GetAllPop3EMailsHeadersRequest request, System.AsyncCallback callback, object asyncState);
        
        BAFactory.XEMail.ConsoleApplication.XEMail.GetAllPop3EMailsHeadersResponse EndGetAllPop3EMailsHeaders(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.siprod.net/webservices/XEMail/GetAllPop3EMailsHeadersDecoded", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        BAFactory.XEMail.ConsoleApplication.XEMail.GetAllPop3EMailsHeadersDecodedResponse GetAllPop3EMailsHeadersDecoded(BAFactory.XEMail.ConsoleApplication.XEMail.GetAllPop3EMailsHeadersDecodedRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.siprod.net/webservices/XEMail/GetAllPop3EMailsHeadersDecoded", ReplyAction="*")]
        System.IAsyncResult BeginGetAllPop3EMailsHeadersDecoded(BAFactory.XEMail.ConsoleApplication.XEMail.GetAllPop3EMailsHeadersDecodedRequest request, System.AsyncCallback callback, object asyncState);
        
        BAFactory.XEMail.ConsoleApplication.XEMail.GetAllPop3EMailsHeadersDecodedResponse EndGetAllPop3EMailsHeadersDecoded(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.siprod.net/webservices/XEMail/GetAllPop3EMailsHeadersDS", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        BAFactory.XEMail.ConsoleApplication.XEMail.GetAllPop3EMailsHeadersDSResponse GetAllPop3EMailsHeadersDS(BAFactory.XEMail.ConsoleApplication.XEMail.GetAllPop3EMailsHeadersDSRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.siprod.net/webservices/XEMail/GetAllPop3EMailsHeadersDS", ReplyAction="*")]
        System.IAsyncResult BeginGetAllPop3EMailsHeadersDS(BAFactory.XEMail.ConsoleApplication.XEMail.GetAllPop3EMailsHeadersDSRequest request, System.AsyncCallback callback, object asyncState);
        
        BAFactory.XEMail.ConsoleApplication.XEMail.GetAllPop3EMailsHeadersDSResponse EndGetAllPop3EMailsHeadersDS(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.siprod.net/webservices/XEMail/GetAllPop3EMailsHeadersHtml", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        BAFactory.XEMail.ConsoleApplication.XEMail.GetAllPop3EMailsHeadersHtmlResponse GetAllPop3EMailsHeadersHtml(BAFactory.XEMail.ConsoleApplication.XEMail.GetAllPop3EMailsHeadersHtmlRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.siprod.net/webservices/XEMail/GetAllPop3EMailsHeadersHtml", ReplyAction="*")]
        System.IAsyncResult BeginGetAllPop3EMailsHeadersHtml(BAFactory.XEMail.ConsoleApplication.XEMail.GetAllPop3EMailsHeadersHtmlRequest request, System.AsyncCallback callback, object asyncState);
        
        BAFactory.XEMail.ConsoleApplication.XEMail.GetAllPop3EMailsHeadersHtmlResponse EndGetAllPop3EMailsHeadersHtml(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.siprod.net/webservices/XEMail/RetrievePop3EMail", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        BAFactory.XEMail.ConsoleApplication.XEMail.RetrievePop3EMailResponse RetrievePop3EMail(BAFactory.XEMail.ConsoleApplication.XEMail.RetrievePop3EMailRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.siprod.net/webservices/XEMail/RetrievePop3EMail", ReplyAction="*")]
        System.IAsyncResult BeginRetrievePop3EMail(BAFactory.XEMail.ConsoleApplication.XEMail.RetrievePop3EMailRequest request, System.AsyncCallback callback, object asyncState);
        
        BAFactory.XEMail.ConsoleApplication.XEMail.RetrievePop3EMailResponse EndRetrievePop3EMail(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.siprod.net/webservices/XEMail/RetrievePop3RawEMailStream", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        BAFactory.XEMail.ConsoleApplication.XEMail.RetrievePop3RawEMailStreamResponse RetrievePop3RawEMailStream(BAFactory.XEMail.ConsoleApplication.XEMail.RetrievePop3RawEMailStreamRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.siprod.net/webservices/XEMail/RetrievePop3RawEMailStream", ReplyAction="*")]
        System.IAsyncResult BeginRetrievePop3RawEMailStream(BAFactory.XEMail.ConsoleApplication.XEMail.RetrievePop3RawEMailStreamRequest request, System.AsyncCallback callback, object asyncState);
        
        BAFactory.XEMail.ConsoleApplication.XEMail.RetrievePop3RawEMailStreamResponse EndRetrievePop3RawEMailStream(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.siprod.net/webservices/XEMail/DeletePop3EMail", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        BAFactory.XEMail.ConsoleApplication.XEMail.DeletePop3EMailResponse DeletePop3EMail(BAFactory.XEMail.ConsoleApplication.XEMail.DeletePop3EMailRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.siprod.net/webservices/XEMail/DeletePop3EMail", ReplyAction="*")]
        System.IAsyncResult BeginDeletePop3EMail(BAFactory.XEMail.ConsoleApplication.XEMail.DeletePop3EMailRequest request, System.AsyncCallback callback, object asyncState);
        
        BAFactory.XEMail.ConsoleApplication.XEMail.DeletePop3EMailResponse EndDeletePop3EMail(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.siprod.net/webservices/XEMail/SendSmtpEMail", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        BAFactory.XEMail.ConsoleApplication.XEMail.SendSmtpEMailResponse SendSmtpEMail(BAFactory.XEMail.ConsoleApplication.XEMail.SendSmtpEMailRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.siprod.net/webservices/XEMail/SendSmtpEMail", ReplyAction="*")]
        System.IAsyncResult BeginSendSmtpEMail(BAFactory.XEMail.ConsoleApplication.XEMail.SendSmtpEMailRequest request, System.AsyncCallback callback, object asyncState);
        
        BAFactory.XEMail.ConsoleApplication.XEMail.SendSmtpEMailResponse EndSendSmtpEMail(System.IAsyncResult result);
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.siprod.net/webservices/XEMail/")]
    public partial class EMailsListElement : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int numberField;
        
        private long bytesField;
        
        private bool retrievedField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public int Number {
            get {
                return this.numberField;
            }
            set {
                this.numberField = value;
                this.RaisePropertyChanged("Number");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public long Bytes {
            get {
                return this.bytesField;
            }
            set {
                this.bytesField = value;
                this.RaisePropertyChanged("Bytes");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public bool Retrieved {
            get {
                return this.retrievedField;
            }
            set {
                this.retrievedField = value;
                this.RaisePropertyChanged("Retrieved");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.siprod.net/webservices/XEMail/")]
    public partial class EMailAttachment : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string nameField;
        
        private string contentTransferEncodingField;
        
        private string contentDescriptionField;
        
        private string contentTypeField;
        
        private string contentDispositionField;
        
        private string fileNameField;
        
        private string idField;
        
        private string contentStreamField;
        
        private string nameEncodingField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
                this.RaisePropertyChanged("Name");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string ContentTransferEncoding {
            get {
                return this.contentTransferEncodingField;
            }
            set {
                this.contentTransferEncodingField = value;
                this.RaisePropertyChanged("ContentTransferEncoding");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string ContentDescription {
            get {
                return this.contentDescriptionField;
            }
            set {
                this.contentDescriptionField = value;
                this.RaisePropertyChanged("ContentDescription");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string ContentType {
            get {
                return this.contentTypeField;
            }
            set {
                this.contentTypeField = value;
                this.RaisePropertyChanged("ContentType");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public string ContentDisposition {
            get {
                return this.contentDispositionField;
            }
            set {
                this.contentDispositionField = value;
                this.RaisePropertyChanged("ContentDisposition");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public string FileName {
            get {
                return this.fileNameField;
            }
            set {
                this.fileNameField = value;
                this.RaisePropertyChanged("FileName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public string Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
                this.RaisePropertyChanged("Id");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=7)]
        public string ContentStream {
            get {
                return this.contentStreamField;
            }
            set {
                this.contentStreamField = value;
                this.RaisePropertyChanged("ContentStream");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=8)]
        public string NameEncoding {
            get {
                return this.nameEncodingField;
            }
            set {
                this.nameEncodingField = value;
                this.RaisePropertyChanged("NameEncoding");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.siprod.net/webservices/XEMail/")]
    public partial class OtherHeadersCollection : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string[] collectionField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=0)]
        public string[] Collection {
            get {
                return this.collectionField;
            }
            set {
                this.collectionField = value;
                this.RaisePropertyChanged("Collection");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.siprod.net/webservices/XEMail/")]
    public partial class EMailBodyAlternateView : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string contentTypeField;
        
        private string contentTransferEncodingField;
        
        private string charsetField;
        
        private string contentStreamField;
        
        private string baseUriField;
        
        private string idField;
        
        private string typeField;
        
        private string[] linkedResourcesField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string ContentType {
            get {
                return this.contentTypeField;
            }
            set {
                this.contentTypeField = value;
                this.RaisePropertyChanged("ContentType");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string ContentTransferEncoding {
            get {
                return this.contentTransferEncodingField;
            }
            set {
                this.contentTransferEncodingField = value;
                this.RaisePropertyChanged("ContentTransferEncoding");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string Charset {
            get {
                return this.charsetField;
            }
            set {
                this.charsetField = value;
                this.RaisePropertyChanged("Charset");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string ContentStream {
            get {
                return this.contentStreamField;
            }
            set {
                this.contentStreamField = value;
                this.RaisePropertyChanged("ContentStream");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public string BaseUri {
            get {
                return this.baseUriField;
            }
            set {
                this.baseUriField = value;
                this.RaisePropertyChanged("BaseUri");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public string Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
                this.RaisePropertyChanged("Id");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public string Type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
                this.RaisePropertyChanged("Type");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=7)]
        public string[] LinkedResources {
            get {
                return this.linkedResourcesField;
            }
            set {
                this.linkedResourcesField = value;
                this.RaisePropertyChanged("LinkedResources");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.siprod.net/webservices/XEMail/")]
    public partial class EMailAddress : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string displayNameField;
        
        private string addressField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string DisplayName {
            get {
                return this.displayNameField;
            }
            set {
                this.displayNameField = value;
                this.RaisePropertyChanged("DisplayName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string Address {
            get {
                return this.addressField;
            }
            set {
                this.addressField = value;
                this.RaisePropertyChanged("Address");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.siprod.net/webservices/XEMail/")]
    public partial class EMailMessage : object, System.ComponentModel.INotifyPropertyChanged {
        
        private EMailAddress[] ccField;
        
        private EMailAddress fromField;
        
        private string headerField;
        
        private EMailBodyAlternateView bodyField;
        
        private string priorityField;
        
        private EMailAddress replyToField;
        
        private EMailAddress senderField;
        
        private string subjectField;
        
        private string dateField;
        
        private EMailAddress[] toField;
        
        private string contentClassesField;
        
        private string mIMEVersionField;
        
        private string contentTypeField;
        
        private string contentTransferEncodingField;
        
        private OtherHeadersCollection otherHeadersField;
        
        private EMailBodyAlternateView[] viewsField;
        
        private EMailAttachment[] attachmentsField;
        
        private string subjectEncodingField;
        
        private string bodyEncodingField;
        
        private int numberField;
        
        private long bytesField;
        
        private bool retrievedField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=0)]
        public EMailAddress[] CC {
            get {
                return this.ccField;
            }
            set {
                this.ccField = value;
                this.RaisePropertyChanged("CC");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public EMailAddress From {
            get {
                return this.fromField;
            }
            set {
                this.fromField = value;
                this.RaisePropertyChanged("From");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string Header {
            get {
                return this.headerField;
            }
            set {
                this.headerField = value;
                this.RaisePropertyChanged("Header");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public EMailBodyAlternateView Body {
            get {
                return this.bodyField;
            }
            set {
                this.bodyField = value;
                this.RaisePropertyChanged("Body");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public string Priority {
            get {
                return this.priorityField;
            }
            set {
                this.priorityField = value;
                this.RaisePropertyChanged("Priority");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public EMailAddress ReplyTo {
            get {
                return this.replyToField;
            }
            set {
                this.replyToField = value;
                this.RaisePropertyChanged("ReplyTo");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public EMailAddress Sender {
            get {
                return this.senderField;
            }
            set {
                this.senderField = value;
                this.RaisePropertyChanged("Sender");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=7)]
        public string Subject {
            get {
                return this.subjectField;
            }
            set {
                this.subjectField = value;
                this.RaisePropertyChanged("Subject");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=8)]
        public string Date {
            get {
                return this.dateField;
            }
            set {
                this.dateField = value;
                this.RaisePropertyChanged("Date");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=9)]
        public EMailAddress[] To {
            get {
                return this.toField;
            }
            set {
                this.toField = value;
                this.RaisePropertyChanged("To");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=10)]
        public string ContentClasses {
            get {
                return this.contentClassesField;
            }
            set {
                this.contentClassesField = value;
                this.RaisePropertyChanged("ContentClasses");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=11)]
        public string MIMEVersion {
            get {
                return this.mIMEVersionField;
            }
            set {
                this.mIMEVersionField = value;
                this.RaisePropertyChanged("MIMEVersion");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=12)]
        public string ContentType {
            get {
                return this.contentTypeField;
            }
            set {
                this.contentTypeField = value;
                this.RaisePropertyChanged("ContentType");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=13)]
        public string ContentTransferEncoding {
            get {
                return this.contentTransferEncodingField;
            }
            set {
                this.contentTransferEncodingField = value;
                this.RaisePropertyChanged("ContentTransferEncoding");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=14)]
        public OtherHeadersCollection OtherHeaders {
            get {
                return this.otherHeadersField;
            }
            set {
                this.otherHeadersField = value;
                this.RaisePropertyChanged("OtherHeaders");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=15)]
        public EMailBodyAlternateView[] Views {
            get {
                return this.viewsField;
            }
            set {
                this.viewsField = value;
                this.RaisePropertyChanged("Views");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=16)]
        public EMailAttachment[] Attachments {
            get {
                return this.attachmentsField;
            }
            set {
                this.attachmentsField = value;
                this.RaisePropertyChanged("Attachments");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=17)]
        public string SubjectEncoding {
            get {
                return this.subjectEncodingField;
            }
            set {
                this.subjectEncodingField = value;
                this.RaisePropertyChanged("SubjectEncoding");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=18)]
        public string BodyEncoding {
            get {
                return this.bodyEncodingField;
            }
            set {
                this.bodyEncodingField = value;
                this.RaisePropertyChanged("BodyEncoding");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=19)]
        public int Number {
            get {
                return this.numberField;
            }
            set {
                this.numberField = value;
                this.RaisePropertyChanged("Number");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=20)]
        public long Bytes {
            get {
                return this.bytesField;
            }
            set {
                this.bytesField = value;
                this.RaisePropertyChanged("Bytes");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=21)]
        public bool Retrieved {
            get {
                return this.retrievedField;
            }
            set {
                this.retrievedField = value;
                this.RaisePropertyChanged("Retrieved");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ListPop3EMails", WrapperNamespace="http://www.siprod.net/webservices/XEMail/", IsWrapped=true)]
    public partial class ListPop3EMailsRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.siprod.net/webservices/XEMail/", Order=0)]
        public string Server;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.siprod.net/webservices/XEMail/", Order=1)]
        public int Port;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.siprod.net/webservices/XEMail/", Order=2)]
        public string Username;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.siprod.net/webservices/XEMail/", Order=3)]
        public string Password;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.siprod.net/webservices/XEMail/", Order=4)]
        public bool Ssl;
        
        public ListPop3EMailsRequest() {
        }
        
        public ListPop3EMailsRequest(string Server, int Port, string Username, string Password, bool Ssl) {
            this.Server = Server;
            this.Port = Port;
            this.Username = Username;
            this.Password = Password;
            this.Ssl = Ssl;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ListPop3EMailsResponse", WrapperNamespace="http://www.siprod.net/webservices/XEMail/", IsWrapped=true)]
    public partial class ListPop3EMailsResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.siprod.net/webservices/XEMail/", Order=0)]
        public EMailsListElement[] ListPop3EMailsResult;
        
        public ListPop3EMailsResponse() {
        }
        
        public ListPop3EMailsResponse(EMailsListElement[] ListPop3EMailsResult) {
            this.ListPop3EMailsResult = ListPop3EMailsResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetAllPop3EMailsHeaders", WrapperNamespace="http://www.siprod.net/webservices/XEMail/", IsWrapped=true)]
    public partial class GetAllPop3EMailsHeadersRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.siprod.net/webservices/XEMail/", Order=0)]
        public string Server;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.siprod.net/webservices/XEMail/", Order=1)]
        public int Port;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.siprod.net/webservices/XEMail/", Order=2)]
        public string Username;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.siprod.net/webservices/XEMail/", Order=3)]
        public string Password;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.siprod.net/webservices/XEMail/", Order=4)]
        public bool Ssl;
        
        public GetAllPop3EMailsHeadersRequest() {
        }
        
        public GetAllPop3EMailsHeadersRequest(string Server, int Port, string Username, string Password, bool Ssl) {
            this.Server = Server;
            this.Port = Port;
            this.Username = Username;
            this.Password = Password;
            this.Ssl = Ssl;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetAllPop3EMailsHeadersResponse", WrapperNamespace="http://www.siprod.net/webservices/XEMail/", IsWrapped=true)]
    public partial class GetAllPop3EMailsHeadersResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.siprod.net/webservices/XEMail/", Order=0)]
        public EMailMessage[] GetAllPop3EMailsHeadersResult;
        
        public GetAllPop3EMailsHeadersResponse() {
        }
        
        public GetAllPop3EMailsHeadersResponse(EMailMessage[] GetAllPop3EMailsHeadersResult) {
            this.GetAllPop3EMailsHeadersResult = GetAllPop3EMailsHeadersResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetAllPop3EMailsHeadersDecoded", WrapperNamespace="http://www.siprod.net/webservices/XEMail/", IsWrapped=true)]
    public partial class GetAllPop3EMailsHeadersDecodedRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.siprod.net/webservices/XEMail/", Order=0)]
        public string Server;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.siprod.net/webservices/XEMail/", Order=1)]
        public int Port;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.siprod.net/webservices/XEMail/", Order=2)]
        public string Username;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.siprod.net/webservices/XEMail/", Order=3)]
        public string Password;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.siprod.net/webservices/XEMail/", Order=4)]
        public bool Ssl;
        
        public GetAllPop3EMailsHeadersDecodedRequest() {
        }
        
        public GetAllPop3EMailsHeadersDecodedRequest(string Server, int Port, string Username, string Password, bool Ssl) {
            this.Server = Server;
            this.Port = Port;
            this.Username = Username;
            this.Password = Password;
            this.Ssl = Ssl;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetAllPop3EMailsHeadersDecodedResponse", WrapperNamespace="http://www.siprod.net/webservices/XEMail/", IsWrapped=true)]
    public partial class GetAllPop3EMailsHeadersDecodedResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.siprod.net/webservices/XEMail/", Order=0)]
        public EMailMessage[] GetAllPop3EMailsHeadersDecodedResult;
        
        public GetAllPop3EMailsHeadersDecodedResponse() {
        }
        
        public GetAllPop3EMailsHeadersDecodedResponse(EMailMessage[] GetAllPop3EMailsHeadersDecodedResult) {
            this.GetAllPop3EMailsHeadersDecodedResult = GetAllPop3EMailsHeadersDecodedResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetAllPop3EMailsHeadersDS", WrapperNamespace="http://www.siprod.net/webservices/XEMail/", IsWrapped=true)]
    public partial class GetAllPop3EMailsHeadersDSRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.siprod.net/webservices/XEMail/", Order=0)]
        public string Server;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.siprod.net/webservices/XEMail/", Order=1)]
        public int Port;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.siprod.net/webservices/XEMail/", Order=2)]
        public string Username;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.siprod.net/webservices/XEMail/", Order=3)]
        public string Password;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.siprod.net/webservices/XEMail/", Order=4)]
        public bool Ssl;
        
        public GetAllPop3EMailsHeadersDSRequest() {
        }
        
        public GetAllPop3EMailsHeadersDSRequest(string Server, int Port, string Username, string Password, bool Ssl) {
            this.Server = Server;
            this.Port = Port;
            this.Username = Username;
            this.Password = Password;
            this.Ssl = Ssl;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetAllPop3EMailsHeadersDSResponse", WrapperNamespace="http://www.siprod.net/webservices/XEMail/", IsWrapped=true)]
    public partial class GetAllPop3EMailsHeadersDSResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.siprod.net/webservices/XEMail/", Order=0)]
        public System.Data.DataSet GetAllPop3EMailsHeadersDSResult;
        
        public GetAllPop3EMailsHeadersDSResponse() {
        }
        
        public GetAllPop3EMailsHeadersDSResponse(System.Data.DataSet GetAllPop3EMailsHeadersDSResult) {
            this.GetAllPop3EMailsHeadersDSResult = GetAllPop3EMailsHeadersDSResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetAllPop3EMailsHeadersHtml", WrapperNamespace="http://www.siprod.net/webservices/XEMail/", IsWrapped=true)]
    public partial class GetAllPop3EMailsHeadersHtmlRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.siprod.net/webservices/XEMail/", Order=0)]
        public string Server;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.siprod.net/webservices/XEMail/", Order=1)]
        public int Port;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.siprod.net/webservices/XEMail/", Order=2)]
        public string Username;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.siprod.net/webservices/XEMail/", Order=3)]
        public string Password;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.siprod.net/webservices/XEMail/", Order=4)]
        public bool Ssl;
        
        public GetAllPop3EMailsHeadersHtmlRequest() {
        }
        
        public GetAllPop3EMailsHeadersHtmlRequest(string Server, int Port, string Username, string Password, bool Ssl) {
            this.Server = Server;
            this.Port = Port;
            this.Username = Username;
            this.Password = Password;
            this.Ssl = Ssl;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetAllPop3EMailsHeadersHtmlResponse", WrapperNamespace="http://www.siprod.net/webservices/XEMail/", IsWrapped=true)]
    public partial class GetAllPop3EMailsHeadersHtmlResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.siprod.net/webservices/XEMail/", Order=0)]
        public string GetAllPop3EMailsHeadersHtmlResult;
        
        public GetAllPop3EMailsHeadersHtmlResponse() {
        }
        
        public GetAllPop3EMailsHeadersHtmlResponse(string GetAllPop3EMailsHeadersHtmlResult) {
            this.GetAllPop3EMailsHeadersHtmlResult = GetAllPop3EMailsHeadersHtmlResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="RetrievePop3EMail", WrapperNamespace="http://www.siprod.net/webservices/XEMail/", IsWrapped=true)]
    public partial class RetrievePop3EMailRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.siprod.net/webservices/XEMail/", Order=0)]
        public string Server;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.siprod.net/webservices/XEMail/", Order=1)]
        public int Port;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.siprod.net/webservices/XEMail/", Order=2)]
        public string Username;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.siprod.net/webservices/XEMail/", Order=3)]
        public string Password;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.siprod.net/webservices/XEMail/", Order=4)]
        public bool Ssl;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.siprod.net/webservices/XEMail/", Order=5)]
        public int MessageNumber;
        
        public RetrievePop3EMailRequest() {
        }
        
        public RetrievePop3EMailRequest(string Server, int Port, string Username, string Password, bool Ssl, int MessageNumber) {
            this.Server = Server;
            this.Port = Port;
            this.Username = Username;
            this.Password = Password;
            this.Ssl = Ssl;
            this.MessageNumber = MessageNumber;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="RetrievePop3EMailResponse", WrapperNamespace="http://www.siprod.net/webservices/XEMail/", IsWrapped=true)]
    public partial class RetrievePop3EMailResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.siprod.net/webservices/XEMail/", Order=0)]
        public BAFactory.XEMail.ConsoleApplication.XEMail.EMailMessage RetrievePop3EMailResult;
        
        public RetrievePop3EMailResponse() {
        }
        
        public RetrievePop3EMailResponse(BAFactory.XEMail.ConsoleApplication.XEMail.EMailMessage RetrievePop3EMailResult) {
            this.RetrievePop3EMailResult = RetrievePop3EMailResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="RetrievePop3RawEMailStream", WrapperNamespace="http://www.siprod.net/webservices/XEMail/", IsWrapped=true)]
    public partial class RetrievePop3RawEMailStreamRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.siprod.net/webservices/XEMail/", Order=0)]
        public string Server;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.siprod.net/webservices/XEMail/", Order=1)]
        public int Port;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.siprod.net/webservices/XEMail/", Order=2)]
        public string Username;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.siprod.net/webservices/XEMail/", Order=3)]
        public string Password;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.siprod.net/webservices/XEMail/", Order=4)]
        public bool Ssl;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.siprod.net/webservices/XEMail/", Order=5)]
        public int MessageNumber;
        
        public RetrievePop3RawEMailStreamRequest() {
        }
        
        public RetrievePop3RawEMailStreamRequest(string Server, int Port, string Username, string Password, bool Ssl, int MessageNumber) {
            this.Server = Server;
            this.Port = Port;
            this.Username = Username;
            this.Password = Password;
            this.Ssl = Ssl;
            this.MessageNumber = MessageNumber;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="RetrievePop3RawEMailStreamResponse", WrapperNamespace="http://www.siprod.net/webservices/XEMail/", IsWrapped=true)]
    public partial class RetrievePop3RawEMailStreamResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.siprod.net/webservices/XEMail/", Order=0)]
        public string RetrievePop3RawEMailStreamResult;
        
        public RetrievePop3RawEMailStreamResponse() {
        }
        
        public RetrievePop3RawEMailStreamResponse(string RetrievePop3RawEMailStreamResult) {
            this.RetrievePop3RawEMailStreamResult = RetrievePop3RawEMailStreamResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="DeletePop3EMail", WrapperNamespace="http://www.siprod.net/webservices/XEMail/", IsWrapped=true)]
    public partial class DeletePop3EMailRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.siprod.net/webservices/XEMail/", Order=0)]
        public string Server;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.siprod.net/webservices/XEMail/", Order=1)]
        public int Port;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.siprod.net/webservices/XEMail/", Order=2)]
        public string Username;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.siprod.net/webservices/XEMail/", Order=3)]
        public string Password;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.siprod.net/webservices/XEMail/", Order=4)]
        public bool Ssl;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.siprod.net/webservices/XEMail/", Order=5)]
        public int MessageNumber;
        
        public DeletePop3EMailRequest() {
        }
        
        public DeletePop3EMailRequest(string Server, int Port, string Username, string Password, bool Ssl, int MessageNumber) {
            this.Server = Server;
            this.Port = Port;
            this.Username = Username;
            this.Password = Password;
            this.Ssl = Ssl;
            this.MessageNumber = MessageNumber;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="DeletePop3EMailResponse", WrapperNamespace="http://www.siprod.net/webservices/XEMail/", IsWrapped=true)]
    public partial class DeletePop3EMailResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.siprod.net/webservices/XEMail/", Order=0)]
        public bool DeletePop3EMailResult;
        
        public DeletePop3EMailResponse() {
        }
        
        public DeletePop3EMailResponse(bool DeletePop3EMailResult) {
            this.DeletePop3EMailResult = DeletePop3EMailResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SendSmtpEMail", WrapperNamespace="http://www.siprod.net/webservices/XEMail/", IsWrapped=true)]
    public partial class SendSmtpEMailRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.siprod.net/webservices/XEMail/", Order=0)]
        public string Server;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.siprod.net/webservices/XEMail/", Order=1)]
        public int Port;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.siprod.net/webservices/XEMail/", Order=2)]
        public string Username;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.siprod.net/webservices/XEMail/", Order=3)]
        public string Password;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.siprod.net/webservices/XEMail/", Order=4)]
        public bool Ssl;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.siprod.net/webservices/XEMail/", Order=5)]
        public BAFactory.XEMail.ConsoleApplication.XEMail.EMailMessage Message;
        
        public SendSmtpEMailRequest() {
        }
        
        public SendSmtpEMailRequest(string Server, int Port, string Username, string Password, bool Ssl, BAFactory.XEMail.ConsoleApplication.XEMail.EMailMessage Message) {
            this.Server = Server;
            this.Port = Port;
            this.Username = Username;
            this.Password = Password;
            this.Ssl = Ssl;
            this.Message = Message;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SendSmtpEMailResponse", WrapperNamespace="http://www.siprod.net/webservices/XEMail/", IsWrapped=true)]
    public partial class SendSmtpEMailResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.siprod.net/webservices/XEMail/", Order=0)]
        public bool SendSmtpEMailResult;
        
        public SendSmtpEMailResponse() {
        }
        
        public SendSmtpEMailResponse(bool SendSmtpEMailResult) {
            this.SendSmtpEMailResult = SendSmtpEMailResult;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ServiceSoapChannel : BAFactory.XEMail.ConsoleApplication.XEMail.ServiceSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ListPop3EMailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ListPop3EMailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public BAFactory.XEMail.ConsoleApplication.XEMail.ListPop3EMailsResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((BAFactory.XEMail.ConsoleApplication.XEMail.ListPop3EMailsResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAllPop3EMailsHeadersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAllPop3EMailsHeadersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public BAFactory.XEMail.ConsoleApplication.XEMail.GetAllPop3EMailsHeadersResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((BAFactory.XEMail.ConsoleApplication.XEMail.GetAllPop3EMailsHeadersResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAllPop3EMailsHeadersDecodedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAllPop3EMailsHeadersDecodedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public BAFactory.XEMail.ConsoleApplication.XEMail.GetAllPop3EMailsHeadersDecodedResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((BAFactory.XEMail.ConsoleApplication.XEMail.GetAllPop3EMailsHeadersDecodedResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAllPop3EMailsHeadersDSCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAllPop3EMailsHeadersDSCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public BAFactory.XEMail.ConsoleApplication.XEMail.GetAllPop3EMailsHeadersDSResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((BAFactory.XEMail.ConsoleApplication.XEMail.GetAllPop3EMailsHeadersDSResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAllPop3EMailsHeadersHtmlCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAllPop3EMailsHeadersHtmlCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public BAFactory.XEMail.ConsoleApplication.XEMail.GetAllPop3EMailsHeadersHtmlResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((BAFactory.XEMail.ConsoleApplication.XEMail.GetAllPop3EMailsHeadersHtmlResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RetrievePop3EMailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public RetrievePop3EMailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public BAFactory.XEMail.ConsoleApplication.XEMail.RetrievePop3EMailResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((BAFactory.XEMail.ConsoleApplication.XEMail.RetrievePop3EMailResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RetrievePop3RawEMailStreamCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public RetrievePop3RawEMailStreamCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public BAFactory.XEMail.ConsoleApplication.XEMail.RetrievePop3RawEMailStreamResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((BAFactory.XEMail.ConsoleApplication.XEMail.RetrievePop3RawEMailStreamResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DeletePop3EMailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public DeletePop3EMailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public BAFactory.XEMail.ConsoleApplication.XEMail.DeletePop3EMailResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((BAFactory.XEMail.ConsoleApplication.XEMail.DeletePop3EMailResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SendSmtpEMailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SendSmtpEMailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public BAFactory.XEMail.ConsoleApplication.XEMail.SendSmtpEMailResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((BAFactory.XEMail.ConsoleApplication.XEMail.SendSmtpEMailResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServiceSoapClient : System.ServiceModel.ClientBase<BAFactory.XEMail.ConsoleApplication.XEMail.ServiceSoap>, BAFactory.XEMail.ConsoleApplication.XEMail.ServiceSoap {
        
        private BeginOperationDelegate onBeginListPop3EMailsDelegate;
        
        private EndOperationDelegate onEndListPop3EMailsDelegate;
        
        private System.Threading.SendOrPostCallback onListPop3EMailsCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAllPop3EMailsHeadersDelegate;
        
        private EndOperationDelegate onEndGetAllPop3EMailsHeadersDelegate;
        
        private System.Threading.SendOrPostCallback onGetAllPop3EMailsHeadersCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAllPop3EMailsHeadersDecodedDelegate;
        
        private EndOperationDelegate onEndGetAllPop3EMailsHeadersDecodedDelegate;
        
        private System.Threading.SendOrPostCallback onGetAllPop3EMailsHeadersDecodedCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAllPop3EMailsHeadersDSDelegate;
        
        private EndOperationDelegate onEndGetAllPop3EMailsHeadersDSDelegate;
        
        private System.Threading.SendOrPostCallback onGetAllPop3EMailsHeadersDSCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAllPop3EMailsHeadersHtmlDelegate;
        
        private EndOperationDelegate onEndGetAllPop3EMailsHeadersHtmlDelegate;
        
        private System.Threading.SendOrPostCallback onGetAllPop3EMailsHeadersHtmlCompletedDelegate;
        
        private BeginOperationDelegate onBeginRetrievePop3EMailDelegate;
        
        private EndOperationDelegate onEndRetrievePop3EMailDelegate;
        
        private System.Threading.SendOrPostCallback onRetrievePop3EMailCompletedDelegate;
        
        private BeginOperationDelegate onBeginRetrievePop3RawEMailStreamDelegate;
        
        private EndOperationDelegate onEndRetrievePop3RawEMailStreamDelegate;
        
        private System.Threading.SendOrPostCallback onRetrievePop3RawEMailStreamCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeletePop3EMailDelegate;
        
        private EndOperationDelegate onEndDeletePop3EMailDelegate;
        
        private System.Threading.SendOrPostCallback onDeletePop3EMailCompletedDelegate;
        
        private BeginOperationDelegate onBeginSendSmtpEMailDelegate;
        
        private EndOperationDelegate onEndSendSmtpEMailDelegate;
        
        private System.Threading.SendOrPostCallback onSendSmtpEMailCompletedDelegate;
        
        public ServiceSoapClient() {
        }
        
        public ServiceSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServiceSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public event System.EventHandler<ListPop3EMailsCompletedEventArgs> ListPop3EMailsCompleted;
        
        public event System.EventHandler<GetAllPop3EMailsHeadersCompletedEventArgs> GetAllPop3EMailsHeadersCompleted;
        
        public event System.EventHandler<GetAllPop3EMailsHeadersDecodedCompletedEventArgs> GetAllPop3EMailsHeadersDecodedCompleted;
        
        public event System.EventHandler<GetAllPop3EMailsHeadersDSCompletedEventArgs> GetAllPop3EMailsHeadersDSCompleted;
        
        public event System.EventHandler<GetAllPop3EMailsHeadersHtmlCompletedEventArgs> GetAllPop3EMailsHeadersHtmlCompleted;
        
        public event System.EventHandler<RetrievePop3EMailCompletedEventArgs> RetrievePop3EMailCompleted;
        
        public event System.EventHandler<RetrievePop3RawEMailStreamCompletedEventArgs> RetrievePop3RawEMailStreamCompleted;
        
        public event System.EventHandler<DeletePop3EMailCompletedEventArgs> DeletePop3EMailCompleted;
        
        public event System.EventHandler<SendSmtpEMailCompletedEventArgs> SendSmtpEMailCompleted;
        
        public BAFactory.XEMail.ConsoleApplication.XEMail.ListPop3EMailsResponse ListPop3EMails(BAFactory.XEMail.ConsoleApplication.XEMail.ListPop3EMailsRequest request) {
            return base.Channel.ListPop3EMails(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginListPop3EMails(BAFactory.XEMail.ConsoleApplication.XEMail.ListPop3EMailsRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginListPop3EMails(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public BAFactory.XEMail.ConsoleApplication.XEMail.ListPop3EMailsResponse EndListPop3EMails(System.IAsyncResult result) {
            return base.Channel.EndListPop3EMails(result);
        }
        
        private System.IAsyncResult OnBeginListPop3EMails(object[] inValues, System.AsyncCallback callback, object asyncState) {
            BAFactory.XEMail.ConsoleApplication.XEMail.ListPop3EMailsRequest request = ((BAFactory.XEMail.ConsoleApplication.XEMail.ListPop3EMailsRequest)(inValues[0]));
            return this.BeginListPop3EMails(request, callback, asyncState);
        }
        
        private object[] OnEndListPop3EMails(System.IAsyncResult result) {
            BAFactory.XEMail.ConsoleApplication.XEMail.ListPop3EMailsResponse retVal = this.EndListPop3EMails(result);
            return new object[] {
                    retVal};
        }
        
        private void OnListPop3EMailsCompleted(object state) {
            if ((this.ListPop3EMailsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ListPop3EMailsCompleted(this, new ListPop3EMailsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ListPop3EMailsAsync(BAFactory.XEMail.ConsoleApplication.XEMail.ListPop3EMailsRequest request) {
            this.ListPop3EMailsAsync(request, null);
        }
        
        public void ListPop3EMailsAsync(BAFactory.XEMail.ConsoleApplication.XEMail.ListPop3EMailsRequest request, object userState) {
            if ((this.onBeginListPop3EMailsDelegate == null)) {
                this.onBeginListPop3EMailsDelegate = new BeginOperationDelegate(this.OnBeginListPop3EMails);
            }
            if ((this.onEndListPop3EMailsDelegate == null)) {
                this.onEndListPop3EMailsDelegate = new EndOperationDelegate(this.OnEndListPop3EMails);
            }
            if ((this.onListPop3EMailsCompletedDelegate == null)) {
                this.onListPop3EMailsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnListPop3EMailsCompleted);
            }
            base.InvokeAsync(this.onBeginListPop3EMailsDelegate, new object[] {
                        request}, this.onEndListPop3EMailsDelegate, this.onListPop3EMailsCompletedDelegate, userState);
        }
        
        public BAFactory.XEMail.ConsoleApplication.XEMail.GetAllPop3EMailsHeadersResponse GetAllPop3EMailsHeaders(BAFactory.XEMail.ConsoleApplication.XEMail.GetAllPop3EMailsHeadersRequest request) {
            return base.Channel.GetAllPop3EMailsHeaders(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetAllPop3EMailsHeaders(BAFactory.XEMail.ConsoleApplication.XEMail.GetAllPop3EMailsHeadersRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAllPop3EMailsHeaders(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public BAFactory.XEMail.ConsoleApplication.XEMail.GetAllPop3EMailsHeadersResponse EndGetAllPop3EMailsHeaders(System.IAsyncResult result) {
            return base.Channel.EndGetAllPop3EMailsHeaders(result);
        }
        
        private System.IAsyncResult OnBeginGetAllPop3EMailsHeaders(object[] inValues, System.AsyncCallback callback, object asyncState) {
            BAFactory.XEMail.ConsoleApplication.XEMail.GetAllPop3EMailsHeadersRequest request = ((BAFactory.XEMail.ConsoleApplication.XEMail.GetAllPop3EMailsHeadersRequest)(inValues[0]));
            return this.BeginGetAllPop3EMailsHeaders(request, callback, asyncState);
        }
        
        private object[] OnEndGetAllPop3EMailsHeaders(System.IAsyncResult result) {
            BAFactory.XEMail.ConsoleApplication.XEMail.GetAllPop3EMailsHeadersResponse retVal = this.EndGetAllPop3EMailsHeaders(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAllPop3EMailsHeadersCompleted(object state) {
            if ((this.GetAllPop3EMailsHeadersCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAllPop3EMailsHeadersCompleted(this, new GetAllPop3EMailsHeadersCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAllPop3EMailsHeadersAsync(BAFactory.XEMail.ConsoleApplication.XEMail.GetAllPop3EMailsHeadersRequest request) {
            this.GetAllPop3EMailsHeadersAsync(request, null);
        }
        
        public void GetAllPop3EMailsHeadersAsync(BAFactory.XEMail.ConsoleApplication.XEMail.GetAllPop3EMailsHeadersRequest request, object userState) {
            if ((this.onBeginGetAllPop3EMailsHeadersDelegate == null)) {
                this.onBeginGetAllPop3EMailsHeadersDelegate = new BeginOperationDelegate(this.OnBeginGetAllPop3EMailsHeaders);
            }
            if ((this.onEndGetAllPop3EMailsHeadersDelegate == null)) {
                this.onEndGetAllPop3EMailsHeadersDelegate = new EndOperationDelegate(this.OnEndGetAllPop3EMailsHeaders);
            }
            if ((this.onGetAllPop3EMailsHeadersCompletedDelegate == null)) {
                this.onGetAllPop3EMailsHeadersCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAllPop3EMailsHeadersCompleted);
            }
            base.InvokeAsync(this.onBeginGetAllPop3EMailsHeadersDelegate, new object[] {
                        request}, this.onEndGetAllPop3EMailsHeadersDelegate, this.onGetAllPop3EMailsHeadersCompletedDelegate, userState);
        }
        
        public BAFactory.XEMail.ConsoleApplication.XEMail.GetAllPop3EMailsHeadersDecodedResponse GetAllPop3EMailsHeadersDecoded(BAFactory.XEMail.ConsoleApplication.XEMail.GetAllPop3EMailsHeadersDecodedRequest request) {
            return base.Channel.GetAllPop3EMailsHeadersDecoded(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetAllPop3EMailsHeadersDecoded(BAFactory.XEMail.ConsoleApplication.XEMail.GetAllPop3EMailsHeadersDecodedRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAllPop3EMailsHeadersDecoded(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public BAFactory.XEMail.ConsoleApplication.XEMail.GetAllPop3EMailsHeadersDecodedResponse EndGetAllPop3EMailsHeadersDecoded(System.IAsyncResult result) {
            return base.Channel.EndGetAllPop3EMailsHeadersDecoded(result);
        }
        
        private System.IAsyncResult OnBeginGetAllPop3EMailsHeadersDecoded(object[] inValues, System.AsyncCallback callback, object asyncState) {
            BAFactory.XEMail.ConsoleApplication.XEMail.GetAllPop3EMailsHeadersDecodedRequest request = ((BAFactory.XEMail.ConsoleApplication.XEMail.GetAllPop3EMailsHeadersDecodedRequest)(inValues[0]));
            return this.BeginGetAllPop3EMailsHeadersDecoded(request, callback, asyncState);
        }
        
        private object[] OnEndGetAllPop3EMailsHeadersDecoded(System.IAsyncResult result) {
            BAFactory.XEMail.ConsoleApplication.XEMail.GetAllPop3EMailsHeadersDecodedResponse retVal = this.EndGetAllPop3EMailsHeadersDecoded(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAllPop3EMailsHeadersDecodedCompleted(object state) {
            if ((this.GetAllPop3EMailsHeadersDecodedCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAllPop3EMailsHeadersDecodedCompleted(this, new GetAllPop3EMailsHeadersDecodedCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAllPop3EMailsHeadersDecodedAsync(BAFactory.XEMail.ConsoleApplication.XEMail.GetAllPop3EMailsHeadersDecodedRequest request) {
            this.GetAllPop3EMailsHeadersDecodedAsync(request, null);
        }
        
        public void GetAllPop3EMailsHeadersDecodedAsync(BAFactory.XEMail.ConsoleApplication.XEMail.GetAllPop3EMailsHeadersDecodedRequest request, object userState) {
            if ((this.onBeginGetAllPop3EMailsHeadersDecodedDelegate == null)) {
                this.onBeginGetAllPop3EMailsHeadersDecodedDelegate = new BeginOperationDelegate(this.OnBeginGetAllPop3EMailsHeadersDecoded);
            }
            if ((this.onEndGetAllPop3EMailsHeadersDecodedDelegate == null)) {
                this.onEndGetAllPop3EMailsHeadersDecodedDelegate = new EndOperationDelegate(this.OnEndGetAllPop3EMailsHeadersDecoded);
            }
            if ((this.onGetAllPop3EMailsHeadersDecodedCompletedDelegate == null)) {
                this.onGetAllPop3EMailsHeadersDecodedCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAllPop3EMailsHeadersDecodedCompleted);
            }
            base.InvokeAsync(this.onBeginGetAllPop3EMailsHeadersDecodedDelegate, new object[] {
                        request}, this.onEndGetAllPop3EMailsHeadersDecodedDelegate, this.onGetAllPop3EMailsHeadersDecodedCompletedDelegate, userState);
        }
        
        public BAFactory.XEMail.ConsoleApplication.XEMail.GetAllPop3EMailsHeadersDSResponse GetAllPop3EMailsHeadersDS(BAFactory.XEMail.ConsoleApplication.XEMail.GetAllPop3EMailsHeadersDSRequest request) {
            return base.Channel.GetAllPop3EMailsHeadersDS(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetAllPop3EMailsHeadersDS(BAFactory.XEMail.ConsoleApplication.XEMail.GetAllPop3EMailsHeadersDSRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAllPop3EMailsHeadersDS(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public BAFactory.XEMail.ConsoleApplication.XEMail.GetAllPop3EMailsHeadersDSResponse EndGetAllPop3EMailsHeadersDS(System.IAsyncResult result) {
            return base.Channel.EndGetAllPop3EMailsHeadersDS(result);
        }
        
        private System.IAsyncResult OnBeginGetAllPop3EMailsHeadersDS(object[] inValues, System.AsyncCallback callback, object asyncState) {
            BAFactory.XEMail.ConsoleApplication.XEMail.GetAllPop3EMailsHeadersDSRequest request = ((BAFactory.XEMail.ConsoleApplication.XEMail.GetAllPop3EMailsHeadersDSRequest)(inValues[0]));
            return this.BeginGetAllPop3EMailsHeadersDS(request, callback, asyncState);
        }
        
        private object[] OnEndGetAllPop3EMailsHeadersDS(System.IAsyncResult result) {
            BAFactory.XEMail.ConsoleApplication.XEMail.GetAllPop3EMailsHeadersDSResponse retVal = this.EndGetAllPop3EMailsHeadersDS(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAllPop3EMailsHeadersDSCompleted(object state) {
            if ((this.GetAllPop3EMailsHeadersDSCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAllPop3EMailsHeadersDSCompleted(this, new GetAllPop3EMailsHeadersDSCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAllPop3EMailsHeadersDSAsync(BAFactory.XEMail.ConsoleApplication.XEMail.GetAllPop3EMailsHeadersDSRequest request) {
            this.GetAllPop3EMailsHeadersDSAsync(request, null);
        }
        
        public void GetAllPop3EMailsHeadersDSAsync(BAFactory.XEMail.ConsoleApplication.XEMail.GetAllPop3EMailsHeadersDSRequest request, object userState) {
            if ((this.onBeginGetAllPop3EMailsHeadersDSDelegate == null)) {
                this.onBeginGetAllPop3EMailsHeadersDSDelegate = new BeginOperationDelegate(this.OnBeginGetAllPop3EMailsHeadersDS);
            }
            if ((this.onEndGetAllPop3EMailsHeadersDSDelegate == null)) {
                this.onEndGetAllPop3EMailsHeadersDSDelegate = new EndOperationDelegate(this.OnEndGetAllPop3EMailsHeadersDS);
            }
            if ((this.onGetAllPop3EMailsHeadersDSCompletedDelegate == null)) {
                this.onGetAllPop3EMailsHeadersDSCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAllPop3EMailsHeadersDSCompleted);
            }
            base.InvokeAsync(this.onBeginGetAllPop3EMailsHeadersDSDelegate, new object[] {
                        request}, this.onEndGetAllPop3EMailsHeadersDSDelegate, this.onGetAllPop3EMailsHeadersDSCompletedDelegate, userState);
        }
        
        public BAFactory.XEMail.ConsoleApplication.XEMail.GetAllPop3EMailsHeadersHtmlResponse GetAllPop3EMailsHeadersHtml(BAFactory.XEMail.ConsoleApplication.XEMail.GetAllPop3EMailsHeadersHtmlRequest request) {
            return base.Channel.GetAllPop3EMailsHeadersHtml(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetAllPop3EMailsHeadersHtml(BAFactory.XEMail.ConsoleApplication.XEMail.GetAllPop3EMailsHeadersHtmlRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAllPop3EMailsHeadersHtml(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public BAFactory.XEMail.ConsoleApplication.XEMail.GetAllPop3EMailsHeadersHtmlResponse EndGetAllPop3EMailsHeadersHtml(System.IAsyncResult result) {
            return base.Channel.EndGetAllPop3EMailsHeadersHtml(result);
        }
        
        private System.IAsyncResult OnBeginGetAllPop3EMailsHeadersHtml(object[] inValues, System.AsyncCallback callback, object asyncState) {
            BAFactory.XEMail.ConsoleApplication.XEMail.GetAllPop3EMailsHeadersHtmlRequest request = ((BAFactory.XEMail.ConsoleApplication.XEMail.GetAllPop3EMailsHeadersHtmlRequest)(inValues[0]));
            return this.BeginGetAllPop3EMailsHeadersHtml(request, callback, asyncState);
        }
        
        private object[] OnEndGetAllPop3EMailsHeadersHtml(System.IAsyncResult result) {
            BAFactory.XEMail.ConsoleApplication.XEMail.GetAllPop3EMailsHeadersHtmlResponse retVal = this.EndGetAllPop3EMailsHeadersHtml(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAllPop3EMailsHeadersHtmlCompleted(object state) {
            if ((this.GetAllPop3EMailsHeadersHtmlCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAllPop3EMailsHeadersHtmlCompleted(this, new GetAllPop3EMailsHeadersHtmlCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAllPop3EMailsHeadersHtmlAsync(BAFactory.XEMail.ConsoleApplication.XEMail.GetAllPop3EMailsHeadersHtmlRequest request) {
            this.GetAllPop3EMailsHeadersHtmlAsync(request, null);
        }
        
        public void GetAllPop3EMailsHeadersHtmlAsync(BAFactory.XEMail.ConsoleApplication.XEMail.GetAllPop3EMailsHeadersHtmlRequest request, object userState) {
            if ((this.onBeginGetAllPop3EMailsHeadersHtmlDelegate == null)) {
                this.onBeginGetAllPop3EMailsHeadersHtmlDelegate = new BeginOperationDelegate(this.OnBeginGetAllPop3EMailsHeadersHtml);
            }
            if ((this.onEndGetAllPop3EMailsHeadersHtmlDelegate == null)) {
                this.onEndGetAllPop3EMailsHeadersHtmlDelegate = new EndOperationDelegate(this.OnEndGetAllPop3EMailsHeadersHtml);
            }
            if ((this.onGetAllPop3EMailsHeadersHtmlCompletedDelegate == null)) {
                this.onGetAllPop3EMailsHeadersHtmlCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAllPop3EMailsHeadersHtmlCompleted);
            }
            base.InvokeAsync(this.onBeginGetAllPop3EMailsHeadersHtmlDelegate, new object[] {
                        request}, this.onEndGetAllPop3EMailsHeadersHtmlDelegate, this.onGetAllPop3EMailsHeadersHtmlCompletedDelegate, userState);
        }
        
        public BAFactory.XEMail.ConsoleApplication.XEMail.RetrievePop3EMailResponse RetrievePop3EMail(BAFactory.XEMail.ConsoleApplication.XEMail.RetrievePop3EMailRequest request) {
            return base.Channel.RetrievePop3EMail(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginRetrievePop3EMail(BAFactory.XEMail.ConsoleApplication.XEMail.RetrievePop3EMailRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRetrievePop3EMail(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public BAFactory.XEMail.ConsoleApplication.XEMail.RetrievePop3EMailResponse EndRetrievePop3EMail(System.IAsyncResult result) {
            return base.Channel.EndRetrievePop3EMail(result);
        }
        
        private System.IAsyncResult OnBeginRetrievePop3EMail(object[] inValues, System.AsyncCallback callback, object asyncState) {
            BAFactory.XEMail.ConsoleApplication.XEMail.RetrievePop3EMailRequest request = ((BAFactory.XEMail.ConsoleApplication.XEMail.RetrievePop3EMailRequest)(inValues[0]));
            return this.BeginRetrievePop3EMail(request, callback, asyncState);
        }
        
        private object[] OnEndRetrievePop3EMail(System.IAsyncResult result) {
            BAFactory.XEMail.ConsoleApplication.XEMail.RetrievePop3EMailResponse retVal = this.EndRetrievePop3EMail(result);
            return new object[] {
                    retVal};
        }
        
        private void OnRetrievePop3EMailCompleted(object state) {
            if ((this.RetrievePop3EMailCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RetrievePop3EMailCompleted(this, new RetrievePop3EMailCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RetrievePop3EMailAsync(BAFactory.XEMail.ConsoleApplication.XEMail.RetrievePop3EMailRequest request) {
            this.RetrievePop3EMailAsync(request, null);
        }
        
        public void RetrievePop3EMailAsync(BAFactory.XEMail.ConsoleApplication.XEMail.RetrievePop3EMailRequest request, object userState) {
            if ((this.onBeginRetrievePop3EMailDelegate == null)) {
                this.onBeginRetrievePop3EMailDelegate = new BeginOperationDelegate(this.OnBeginRetrievePop3EMail);
            }
            if ((this.onEndRetrievePop3EMailDelegate == null)) {
                this.onEndRetrievePop3EMailDelegate = new EndOperationDelegate(this.OnEndRetrievePop3EMail);
            }
            if ((this.onRetrievePop3EMailCompletedDelegate == null)) {
                this.onRetrievePop3EMailCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRetrievePop3EMailCompleted);
            }
            base.InvokeAsync(this.onBeginRetrievePop3EMailDelegate, new object[] {
                        request}, this.onEndRetrievePop3EMailDelegate, this.onRetrievePop3EMailCompletedDelegate, userState);
        }
        
        public BAFactory.XEMail.ConsoleApplication.XEMail.RetrievePop3RawEMailStreamResponse RetrievePop3RawEMailStream(BAFactory.XEMail.ConsoleApplication.XEMail.RetrievePop3RawEMailStreamRequest request) {
            return base.Channel.RetrievePop3RawEMailStream(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginRetrievePop3RawEMailStream(BAFactory.XEMail.ConsoleApplication.XEMail.RetrievePop3RawEMailStreamRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRetrievePop3RawEMailStream(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public BAFactory.XEMail.ConsoleApplication.XEMail.RetrievePop3RawEMailStreamResponse EndRetrievePop3RawEMailStream(System.IAsyncResult result) {
            return base.Channel.EndRetrievePop3RawEMailStream(result);
        }
        
        private System.IAsyncResult OnBeginRetrievePop3RawEMailStream(object[] inValues, System.AsyncCallback callback, object asyncState) {
            BAFactory.XEMail.ConsoleApplication.XEMail.RetrievePop3RawEMailStreamRequest request = ((BAFactory.XEMail.ConsoleApplication.XEMail.RetrievePop3RawEMailStreamRequest)(inValues[0]));
            return this.BeginRetrievePop3RawEMailStream(request, callback, asyncState);
        }
        
        private object[] OnEndRetrievePop3RawEMailStream(System.IAsyncResult result) {
            BAFactory.XEMail.ConsoleApplication.XEMail.RetrievePop3RawEMailStreamResponse retVal = this.EndRetrievePop3RawEMailStream(result);
            return new object[] {
                    retVal};
        }
        
        private void OnRetrievePop3RawEMailStreamCompleted(object state) {
            if ((this.RetrievePop3RawEMailStreamCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RetrievePop3RawEMailStreamCompleted(this, new RetrievePop3RawEMailStreamCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RetrievePop3RawEMailStreamAsync(BAFactory.XEMail.ConsoleApplication.XEMail.RetrievePop3RawEMailStreamRequest request) {
            this.RetrievePop3RawEMailStreamAsync(request, null);
        }
        
        public void RetrievePop3RawEMailStreamAsync(BAFactory.XEMail.ConsoleApplication.XEMail.RetrievePop3RawEMailStreamRequest request, object userState) {
            if ((this.onBeginRetrievePop3RawEMailStreamDelegate == null)) {
                this.onBeginRetrievePop3RawEMailStreamDelegate = new BeginOperationDelegate(this.OnBeginRetrievePop3RawEMailStream);
            }
            if ((this.onEndRetrievePop3RawEMailStreamDelegate == null)) {
                this.onEndRetrievePop3RawEMailStreamDelegate = new EndOperationDelegate(this.OnEndRetrievePop3RawEMailStream);
            }
            if ((this.onRetrievePop3RawEMailStreamCompletedDelegate == null)) {
                this.onRetrievePop3RawEMailStreamCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRetrievePop3RawEMailStreamCompleted);
            }
            base.InvokeAsync(this.onBeginRetrievePop3RawEMailStreamDelegate, new object[] {
                        request}, this.onEndRetrievePop3RawEMailStreamDelegate, this.onRetrievePop3RawEMailStreamCompletedDelegate, userState);
        }
        
        public BAFactory.XEMail.ConsoleApplication.XEMail.DeletePop3EMailResponse DeletePop3EMail(BAFactory.XEMail.ConsoleApplication.XEMail.DeletePop3EMailRequest request) {
            return base.Channel.DeletePop3EMail(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginDeletePop3EMail(BAFactory.XEMail.ConsoleApplication.XEMail.DeletePop3EMailRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeletePop3EMail(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public BAFactory.XEMail.ConsoleApplication.XEMail.DeletePop3EMailResponse EndDeletePop3EMail(System.IAsyncResult result) {
            return base.Channel.EndDeletePop3EMail(result);
        }
        
        private System.IAsyncResult OnBeginDeletePop3EMail(object[] inValues, System.AsyncCallback callback, object asyncState) {
            BAFactory.XEMail.ConsoleApplication.XEMail.DeletePop3EMailRequest request = ((BAFactory.XEMail.ConsoleApplication.XEMail.DeletePop3EMailRequest)(inValues[0]));
            return this.BeginDeletePop3EMail(request, callback, asyncState);
        }
        
        private object[] OnEndDeletePop3EMail(System.IAsyncResult result) {
            BAFactory.XEMail.ConsoleApplication.XEMail.DeletePop3EMailResponse retVal = this.EndDeletePop3EMail(result);
            return new object[] {
                    retVal};
        }
        
        private void OnDeletePop3EMailCompleted(object state) {
            if ((this.DeletePop3EMailCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeletePop3EMailCompleted(this, new DeletePop3EMailCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeletePop3EMailAsync(BAFactory.XEMail.ConsoleApplication.XEMail.DeletePop3EMailRequest request) {
            this.DeletePop3EMailAsync(request, null);
        }
        
        public void DeletePop3EMailAsync(BAFactory.XEMail.ConsoleApplication.XEMail.DeletePop3EMailRequest request, object userState) {
            if ((this.onBeginDeletePop3EMailDelegate == null)) {
                this.onBeginDeletePop3EMailDelegate = new BeginOperationDelegate(this.OnBeginDeletePop3EMail);
            }
            if ((this.onEndDeletePop3EMailDelegate == null)) {
                this.onEndDeletePop3EMailDelegate = new EndOperationDelegate(this.OnEndDeletePop3EMail);
            }
            if ((this.onDeletePop3EMailCompletedDelegate == null)) {
                this.onDeletePop3EMailCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeletePop3EMailCompleted);
            }
            base.InvokeAsync(this.onBeginDeletePop3EMailDelegate, new object[] {
                        request}, this.onEndDeletePop3EMailDelegate, this.onDeletePop3EMailCompletedDelegate, userState);
        }
        
        public BAFactory.XEMail.ConsoleApplication.XEMail.SendSmtpEMailResponse SendSmtpEMail(BAFactory.XEMail.ConsoleApplication.XEMail.SendSmtpEMailRequest request) {
            return base.Channel.SendSmtpEMail(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginSendSmtpEMail(BAFactory.XEMail.ConsoleApplication.XEMail.SendSmtpEMailRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSendSmtpEMail(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public BAFactory.XEMail.ConsoleApplication.XEMail.SendSmtpEMailResponse EndSendSmtpEMail(System.IAsyncResult result) {
            return base.Channel.EndSendSmtpEMail(result);
        }
        
        private System.IAsyncResult OnBeginSendSmtpEMail(object[] inValues, System.AsyncCallback callback, object asyncState) {
            BAFactory.XEMail.ConsoleApplication.XEMail.SendSmtpEMailRequest request = ((BAFactory.XEMail.ConsoleApplication.XEMail.SendSmtpEMailRequest)(inValues[0]));
            return this.BeginSendSmtpEMail(request, callback, asyncState);
        }
        
        private object[] OnEndSendSmtpEMail(System.IAsyncResult result) {
            BAFactory.XEMail.ConsoleApplication.XEMail.SendSmtpEMailResponse retVal = this.EndSendSmtpEMail(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSendSmtpEMailCompleted(object state) {
            if ((this.SendSmtpEMailCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SendSmtpEMailCompleted(this, new SendSmtpEMailCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SendSmtpEMailAsync(BAFactory.XEMail.ConsoleApplication.XEMail.SendSmtpEMailRequest request) {
            this.SendSmtpEMailAsync(request, null);
        }
        
        public void SendSmtpEMailAsync(BAFactory.XEMail.ConsoleApplication.XEMail.SendSmtpEMailRequest request, object userState) {
            if ((this.onBeginSendSmtpEMailDelegate == null)) {
                this.onBeginSendSmtpEMailDelegate = new BeginOperationDelegate(this.OnBeginSendSmtpEMail);
            }
            if ((this.onEndSendSmtpEMailDelegate == null)) {
                this.onEndSendSmtpEMailDelegate = new EndOperationDelegate(this.OnEndSendSmtpEMail);
            }
            if ((this.onSendSmtpEMailCompletedDelegate == null)) {
                this.onSendSmtpEMailCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSendSmtpEMailCompleted);
            }
            base.InvokeAsync(this.onBeginSendSmtpEMailDelegate, new object[] {
                        request}, this.onEndSendSmtpEMailDelegate, this.onSendSmtpEMailCompletedDelegate, userState);
        }
    }
}
